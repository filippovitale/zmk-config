#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT_LAYER 0
#define LOWER_LAYER   1
#define RAISE_LAYER   2
#define ADJUST_LAYER  3

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -------------------------------------------------------------------------------------
// | LALT  (TAB) |            Q   |            W   |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | LALT  (BKSP) |
// | LCTRL (ESC) |            A   |            S   |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | LCTRL ( RET) |
// |  SHFT ( ` ) | Spectacle (Z)  | Spectacle (X)  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT  (   ') |
//                                                 | LGUI ([) | LWR | SPC | RSE  | LGUI (]) |
                        bindings = <
   &mt  LALT   TAB  &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &mt LALT  BSPC
   &mt LCTRL   ESC  &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &mt LCTRL  RET
   &mt LSHFT GRAVE  &mt LA(LS(LGUI)) Z &mt LA(LC(LGUI)) X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &mt RSHFT  SQT
            &mt LGUI LBKT &mo LOWER_LAYER   &kp SPACE   &mo RAISE_LAYER  &mt LGUI RBKT
                        >;
                };

                lower_layer {
// ----------------------------------------------------------------------------------
// |    |     |     |     |     |     |   |     |     |     |  -  |  =  |  \  |
// |    |     |     |     |     |     |   |  6  |  7  |  8  |  9  |  0  |     |
// |    |     |     |     |     |     |   |     |     |     |     |     |     |
//                       |     |     |     | ADJ |     |
                        bindings = <
   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp MINUS  &kp EQUAL  &kp BACKSLASH
   &trans  &trans  &trans  &trans  &trans  &trans  &kp N6  &kp N7  &kp N8  &kp N9     &kp N0     &trans
   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans     &trans
                  &trans      &trans       &trans        &mo ADJUST_LAYER       &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |    |     |     |     |     |     |   |     |      |      |     |       | DEL |
// |    |  1  |  2  |  3  |  4  |  5  |   |     | Left | Down |  Up | Right |     |
// |    |     |     |     |     |     |   |     |      |      |     |       |     |
//                       |     | ADJ |     |     |     |
                        bindings = <
   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans  &trans     &kp DEL
   &trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans
   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans  &trans     &trans
                  &trans      &mo ADJUST_LAYER       &trans        &trans       &trans
                        >;
                };

                adjust_layer {
// -----------------------------------------------------------------------------------------
// |    F1    |    F2    |    F3    |    F4    | F5 |    F6   |    |  F7 |  F8 |  F9 | F10 | F11 | F12 |
// | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    | RGB TOG |    | BT1 | BT2 | BT3 | BT4 | BT5 | BT CLR |
// | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |    |         |    |     |     |     |     |     |        |
//                                              |     |     |      |     |     |
                        bindings = <
   &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
   &rgb_ug RGB_BRI &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_EFF &none &rgb_ug RGB_TOG    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR
   &rgb_ug RGB_BRD &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_EFR &none &none              &none        &none        &none        &none        &none        &none
                   &trans      &trans       &trans        &trans       &trans
                        >;
                };
        };
};
